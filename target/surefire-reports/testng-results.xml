<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="My Test Suite" duration-ms="28737" started-at="2019-05-09T13:08:28Z" finished-at="2019-05-09T13:08:56Z">
    <groups>
    </groups>
    <test name="test group 2" duration-ms="11568" started-at="2019-05-09T13:08:28Z" finished-at="2019-05-09T13:08:39Z">
      <class name="com.mychallenge.uitests.SelectItemFromPullDownMenu">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:com.mychallenge.uitests.SelectItemFromPullDownMenu@67c277a0]" name="beforeMethod" is-config="true" duration-ms="7418" started-at="2019-05-09T13:08:28Z" finished-at="2019-05-09T13:08:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chromeRemote]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectFundingOptionsLinkFromFeaturesMenu(java.lang.String)[pri:0, instance:com.mychallenge.uitests.SelectItemFromPullDownMenu@67c277a0]" name="selectFundingOptionsLinkFromFeaturesMenu" duration-ms="2698" started-at="2019-05-09T13:08:35Z" description="Test to validate user can navigate to Funding Options page by selecting page link from Features menu" data-provider="dataProvider" finished-at="2019-05-09T13:08:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Funding Options]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectFundingOptionsLinkFromFeaturesMenu -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mychallenge.uitests.SelectItemFromPullDownMenu@67c277a0]" name="afterMethod" is-config="true" duration-ms="1382" started-at="2019-05-09T13:08:38Z" finished-at="2019-05-09T13:08:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectFundingOptionsLinkFromFeaturesMenu status=SUCCESS method=SelectItemFromPullDownMenu.selectFundingOptionsLinkFromFeaturesMenu(java.lang.String)[pri:0, instance:com.mychallenge.uitests.SelectItemFromPullDownMenu@67c277a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.mychallenge.uitests.SelectItemFromPullDownMenu -->
    </test> <!-- test group 2 -->
    <test name="test group 3" duration-ms="9336" started-at="2019-05-09T13:08:39Z" finished-at="2019-05-09T13:08:49Z">
      <class name="com.mychallenge.uitests.GetDataFromMarginFeesTable">
        <test-method status="PASS" signature="beforSuite()[pri:0, instance:com.mychallenge.uitests.GetDataFromMarginFeesTable@7baf6acf]" name="beforSuite" is-config="true" duration-ms="12" started-at="2019-05-09T13:08:28Z" finished-at="2019-05-09T13:08:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:com.mychallenge.uitests.GetDataFromMarginFeesTable@7baf6acf]" name="beforeMethod" is-config="true" duration-ms="5136" started-at="2019-05-09T13:08:39Z" finished-at="2019-05-09T13:08:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chromeRemote]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyMarginFeesTableBaseCurrency(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mychallenge.uitests.GetDataFromMarginFeesTable@7baf6acf]" name="verifyMarginFeesTableBaseCurrency" duration-ms="3265" started-at="2019-05-09T13:08:44Z" description="Test to validate that user can navigate to the Fee Schedule page, and retrieve data from the Margin Fees table" data-provider="dataProvider" finished-at="2019-05-09T13:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[XBT (Bitcoin)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[USDT (Tether)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[BCH (Bitcoin Cash)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ETH (Ethereum)]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ETC (Ethereum Classic)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[REP (Augur)]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[XMR (Monero)]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[XRP (Ripple)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMarginFeesTableBaseCurrency -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mychallenge.uitests.GetDataFromMarginFeesTable@7baf6acf]" name="afterMethod" is-config="true" duration-ms="932" started-at="2019-05-09T13:08:48Z" finished-at="2019-05-09T13:08:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMarginFeesTableBaseCurrency status=SUCCESS method=GetDataFromMarginFeesTable.verifyMarginFeesTableBaseCurrency(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mychallenge.uitests.GetDataFromMarginFeesTable@7baf6acf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.mychallenge.uitests.GetDataFromMarginFeesTable -->
    </test> <!-- test group 3 -->
    <test name="test group 1" duration-ms="28737" started-at="2019-05-09T13:08:28Z" finished-at="2019-05-09T13:08:56Z">
      <class name="com.mychallenge.uitests.FillOutForm">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:com.mychallenge.uitests.FillOutForm@7e75bf2d]" name="beforeMethod" is-config="true" duration-ms="7452" started-at="2019-05-09T13:08:28Z" finished-at="2019-05-09T13:08:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chromeRemote]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="fillOutGeneralForm(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mychallenge.uitests.FillOutForm@7e75bf2d]" name="fillOutGeneralForm" duration-ms="19803" started-at="2019-05-09T13:08:35Z" description="Test to validate that user can navigate to submit a request pageand fill out general form and submit" data-provider="dataProvider" finished-at="2019-05-09T13:08:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[General Form]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testemail@mytest.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Other]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[just testing]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[inputting test details]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Your request was successfully submitted.]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='notification-text']"}
  (Session info: chrome=74.0.3729.131)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'rasta', ip: '192.168.1.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_65'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 74.0.3729.6 (255758eccf3d24..., userDataDir: C:\Users\Rastamon\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:51125}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 74.0.3729.131, webStorageEnabled: true}
Session ID: 7c8380d7b2820dfa3092a57ed7712638
*** Element info: {Using=xpath, value=//span[@class='notification-text']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='notification-text']"}
  (Session info: chrome=74.0.3729.131)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'rasta', ip: '192.168.1.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_65'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 74.0.3729.6 (255758eccf3d24..., userDataDir: C:\Users\Rastamon\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:51125}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 74.0.3729.131, webStorageEnabled: true}
Session ID: 7c8380d7b2820dfa3092a57ed7712638
*** Element info: {Using=xpath, value=//span[@class='notification-text']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.mychallenge.helper.Waits.waitForVisibilityOfElementBy(Waits.java:26)
at com.mychallenge.util.SeleniumMethods.getText(SeleniumMethods.java:51)
at com.mychallenge.pages.SupportPage.verifyRequestSuccessfullySubmitted(SupportPage.java:27)
at com.mychallenge.uitests.FillOutForm.fillOutGeneralForm(FillOutForm.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillOutGeneralForm -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.mychallenge.uitests.FillOutForm@7e75bf2d]" name="afterMethod" is-config="true" duration-ms="1414" started-at="2019-05-09T13:08:55Z" finished-at="2019-05-09T13:08:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillOutGeneralForm status=FAILURE method=FillOutForm.fillOutGeneralForm(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.mychallenge.uitests.FillOutForm@7e75bf2d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.mychallenge.uitests.FillOutForm -->
    </test> <!-- test group 1 -->
  </suite> <!-- My Test Suite -->
</testng-results>
